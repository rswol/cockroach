# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Cocroach DB

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Mount bazel cache
        uses: actions/cache@v1
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: Checkout
        uses: actions/checkout@v2

      - name:
        run: |
          echo "build --config lintonbuild" >> .bazelrc.user
          echo "build --config=crosslinux" >> .bazelrc.user
          echo "build --remote_cache=http://127.0.0.1:9867" >> ~/.bazelrc
          echo "test --test_tmpdir=${GITHUB_WORKSPACE}/tmp" >> .bazelrc.user

      - name:
        run: |
          ./dev doctor
          ./dev build --cross=linuxarm

      - name:
        run: |
          cp build/deploy/cockroach.sh docker
          cp cockroach docker

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            phx.ocir.io/ax3gejcudsku/cockroach
          tags: |
            type=sha
          flavor: |
            latest=true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Oracle CR
        uses: docker/login-action@v1
        with:
          registry: phx.ocir.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: docker
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
